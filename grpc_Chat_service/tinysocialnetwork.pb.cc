// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinysocialnetwork.proto

#include "tinysocialnetwork.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tinysocialnetwork {
class CreateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRequest>
      _instance;
} _CreateRequest_default_instance_;
class CreateReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateReply>
      _instance;
} _CreateReply_default_instance_;
class UserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRequest>
      _instance;
} _UserRequest_default_instance_;
class UserReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReply>
      _instance;
} _UserReply_default_instance_;
class ListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRequest>
      _instance;
} _ListRequest_default_instance_;
class ListReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListReply>
      _instance;
} _ListReply_default_instance_;
class TimelineStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimelineStream>
      _instance;
} _TimelineStream_default_instance_;
}  // namespace tinysocialnetwork
namespace protobuf_tinysocialnetwork_2eproto {
void InitDefaultsCreateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_CreateRequest_default_instance_;
    new (ptr) ::tinysocialnetwork::CreateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::CreateRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRequestImpl);
}

void InitDefaultsCreateReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_CreateReply_default_instance_;
    new (ptr) ::tinysocialnetwork::CreateReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::CreateReply::InitAsDefaultInstance();
}

void InitDefaultsCreateReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateReplyImpl);
}

void InitDefaultsUserRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_UserRequest_default_instance_;
    new (ptr) ::tinysocialnetwork::UserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::UserRequest::InitAsDefaultInstance();
}

void InitDefaultsUserRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRequestImpl);
}

void InitDefaultsUserReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_UserReply_default_instance_;
    new (ptr) ::tinysocialnetwork::UserReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::UserReply::InitAsDefaultInstance();
}

void InitDefaultsUserReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserReplyImpl);
}

void InitDefaultsListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_ListRequest_default_instance_;
    new (ptr) ::tinysocialnetwork::ListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::ListRequest::InitAsDefaultInstance();
}

void InitDefaultsListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListRequestImpl);
}

void InitDefaultsListReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_ListReply_default_instance_;
    new (ptr) ::tinysocialnetwork::ListReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::ListReply::InitAsDefaultInstance();
}

void InitDefaultsListReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListReplyImpl);
}

void InitDefaultsTimelineStreamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tinysocialnetwork::_TimelineStream_default_instance_;
    new (ptr) ::tinysocialnetwork::TimelineStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinysocialnetwork::TimelineStream::InitAsDefaultInstance();
}

void InitDefaultsTimelineStream() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimelineStreamImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::CreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::CreateRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::CreateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::CreateReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::UserRequest, requestuser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::UserRequest, targetuser_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::UserReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::UserReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListReply, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListReply, followers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::ListReply, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::TimelineStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::TimelineStream, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::TimelineStream, post_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tinysocialnetwork::TimelineStream, time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tinysocialnetwork::CreateRequest)},
  { 6, -1, sizeof(::tinysocialnetwork::CreateReply)},
  { 12, -1, sizeof(::tinysocialnetwork::UserRequest)},
  { 19, -1, sizeof(::tinysocialnetwork::UserReply)},
  { 25, -1, sizeof(::tinysocialnetwork::ListRequest)},
  { 31, -1, sizeof(::tinysocialnetwork::ListReply)},
  { 39, -1, sizeof(::tinysocialnetwork::TimelineStream)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_CreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_CreateReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_UserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_UserReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_ListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_ListReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tinysocialnetwork::_TimelineStream_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tinysocialnetwork.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027tinysocialnetwork.proto\022\021tinysocialnet"
      "work\"!\n\rCreateRequest\022\020\n\010username\030\001 \001(\t\""
      "\035\n\013CreateReply\022\016\n\006status\030\001 \001(\t\"6\n\013UserRe"
      "quest\022\023\n\013requestuser\030\001 \001(\t\022\022\n\ntargetuser"
      "\030\002 \001(\t\"\033\n\tUserReply\022\016\n\006status\030\001 \001(\t\"\037\n\013L"
      "istRequest\022\020\n\010username\030\001 \001(\t\"=\n\tListRepl"
      "y\022\r\n\005users\030\001 \003(\t\022\021\n\tfollowers\030\002 \003(\t\022\016\n\006s"
      "tatus\030\003 \001(\t\">\n\016TimelineStream\022\020\n\010usernam"
      "e\030\001 \001(\t\022\014\n\004post\030\002 \001(\t\022\014\n\004time\030\003 \001(\t2\223\003\n\010"
      "SNetwork\022Q\n\013create_user\022 .tinysocialnetw"
      "ork.CreateRequest\032\036.tinysocialnetwork.Cr"
      "eateReply\"\000\022H\n\006follow\022\036.tinysocialnetwor"
      "k.UserRequest\032\034.tinysocialnetwork.UserRe"
      "ply\"\000\022J\n\010unfollow\022\036.tinysocialnetwork.Us"
      "erRequest\032\034.tinysocialnetwork.UserReply\""
      "\000\022F\n\004list\022\036.tinysocialnetwork.ListReques"
      "t\032\034.tinysocialnetwork.ListReply\"\000\022V\n\010tim"
      "eline\022!.tinysocialnetwork.TimelineStream"
      "\032!.tinysocialnetwork.TimelineStream\"\000(\0010"
      "\001B B\026TinySocialNetworkProtoP\001\242\002\003TSNb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 803);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tinysocialnetwork.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tinysocialnetwork_2eproto
namespace tinysocialnetwork {

// ===================================================================

void CreateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRequest::CreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsCreateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.CreateRequest)
}
CreateRequest::CreateRequest(const CreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.CreateRequest)
}

void CreateRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateRequest::~CreateRequest() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.CreateRequest)
  SharedDtor();
}

void CreateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRequest::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRequest& CreateRequest::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsCreateRequest();
  return *internal_default_instance();
}

CreateRequest* CreateRequest::New(::google::protobuf::Arena* arena) const {
  CreateRequest* n = new CreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.CreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.CreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.CreateRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.CreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.CreateRequest)
  return false;
#undef DO_
}

void CreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.CreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.CreateRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.CreateRequest)
}

::google::protobuf::uint8* CreateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.CreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.CreateRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.CreateRequest)
  return target;
}

size_t CreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.CreateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.CreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.CreateRequest)
    MergeFrom(*source);
  }
}

void CreateRequest::MergeFrom(const CreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void CreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequest::CopyFrom(const CreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequest::IsInitialized() const {
  return true;
}

void CreateRequest::Swap(CreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRequest::InternalSwap(CreateRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRequest::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateReply::CreateReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsCreateReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.CreateReply)
}
CreateReply::CreateReply(const CreateReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.CreateReply)
}

void CreateReply::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateReply::~CreateReply() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.CreateReply)
  SharedDtor();
}

void CreateReply::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateReply::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateReply& CreateReply::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsCreateReply();
  return *internal_default_instance();
}

CreateReply* CreateReply::New(::google::protobuf::Arena* arena) const {
  CreateReply* n = new CreateReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.CreateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.CreateReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.CreateReply.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.CreateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.CreateReply)
  return false;
#undef DO_
}

void CreateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.CreateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.CreateReply.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.CreateReply)
}

::google::protobuf::uint8* CreateReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.CreateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.CreateReply.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.CreateReply)
  return target;
}

size_t CreateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.CreateReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.CreateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.CreateReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.CreateReply)
    MergeFrom(*source);
  }
}

void CreateReply::MergeFrom(const CreateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.CreateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void CreateReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.CreateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReply::CopyFrom(const CreateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.CreateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReply::IsInitialized() const {
  return true;
}

void CreateReply::Swap(CreateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateReply::InternalSwap(CreateReply* other) {
  using std::swap;
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateReply::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRequest::kRequestuserFieldNumber;
const int UserRequest::kTargetuserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRequest::UserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsUserRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requestuser().size() > 0) {
    requestuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestuser_);
  }
  targetuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetuser().size() > 0) {
    targetuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetuser_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.UserRequest)
}

void UserRequest::SharedCtor() {
  requestuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.UserRequest)
  SharedDtor();
}

void UserRequest::SharedDtor() {
  requestuser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetuser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRequest::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRequest& UserRequest::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsUserRequest();
  return *internal_default_instance();
}

UserRequest* UserRequest::New(::google::protobuf::Arena* arena) const {
  UserRequest* n = new UserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestuser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetuser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.UserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string requestuser = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestuser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestuser().data(), static_cast<int>(this->requestuser().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.UserRequest.requestuser"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string targetuser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetuser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetuser().data(), static_cast<int>(this->targetuser().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.UserRequest.targetuser"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.UserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.UserRequest)
  return false;
#undef DO_
}

void UserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestuser = 1;
  if (this->requestuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestuser().data(), static_cast<int>(this->requestuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserRequest.requestuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->requestuser(), output);
  }

  // string targetuser = 2;
  if (this->targetuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetuser().data(), static_cast<int>(this->targetuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserRequest.targetuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->targetuser(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.UserRequest)
}

::google::protobuf::uint8* UserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestuser = 1;
  if (this->requestuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestuser().data(), static_cast<int>(this->requestuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserRequest.requestuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->requestuser(), target);
  }

  // string targetuser = 2;
  if (this->targetuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetuser().data(), static_cast<int>(this->targetuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserRequest.targetuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->targetuser(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.UserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string requestuser = 1;
  if (this->requestuser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->requestuser());
  }

  // string targetuser = 2;
  if (this->targetuser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetuser());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.UserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.UserRequest)
    MergeFrom(*source);
  }
}

void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestuser().size() > 0) {

    requestuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestuser_);
  }
  if (from.targetuser().size() > 0) {

    targetuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetuser_);
  }
}

void UserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::Swap(UserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  requestuser_.Swap(&other->requestuser_);
  targetuser_.Swap(&other->targetuser_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReply::UserReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsUserReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.UserReply)
}
UserReply::UserReply(const UserReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.UserReply)
}

void UserReply::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserReply::~UserReply() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.UserReply)
  SharedDtor();
}

void UserReply::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReply::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReply& UserReply::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsUserReply();
  return *internal_default_instance();
}

UserReply* UserReply::New(::google::protobuf::Arena* arena) const {
  UserReply* n = new UserReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.UserReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.UserReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.UserReply.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.UserReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.UserReply)
  return false;
#undef DO_
}

void UserReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.UserReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserReply.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.UserReply)
}

::google::protobuf::uint8* UserReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.UserReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.UserReply.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.UserReply)
  return target;
}

size_t UserReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.UserReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.UserReply)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.UserReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.UserReply)
    MergeFrom(*source);
  }
}

void UserReply::MergeFrom(const UserReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.UserReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void UserReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.UserReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReply::CopyFrom(const UserReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.UserReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReply::IsInitialized() const {
  return true;
}

void UserReply::Swap(UserReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReply::InternalSwap(UserReply* other) {
  using std::swap;
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserReply::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRequest::ListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.ListRequest)
}

void ListRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListRequest::~ListRequest() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.ListRequest)
  SharedDtor();
}

void ListRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRequest::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRequest& ListRequest::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsListRequest();
  return *internal_default_instance();
}

ListRequest* ListRequest::New(::google::protobuf::Arena* arena) const {
  ListRequest* n = new ListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.ListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.ListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.ListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.ListRequest)
  return false;
#undef DO_
}

void ListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.ListRequest)
}

::google::protobuf::uint8* ListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.ListRequest)
  return target;
}

size_t ListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.ListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.ListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.ListRequest)
    MergeFrom(*source);
  }
}

void ListRequest::MergeFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void ListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRequest::CopyFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRequest::IsInitialized() const {
  return true;
}

void ListRequest::Swap(ListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRequest::InternalSwap(ListRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRequest::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListReply::kUsersFieldNumber;
const int ListReply::kFollowersFieldNumber;
const int ListReply::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListReply::ListReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsListReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.ListReply)
}
ListReply::ListReply(const ListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      followers_(from.followers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.ListReply)
}

void ListReply::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListReply::~ListReply() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.ListReply)
  SharedDtor();
}

void ListReply::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListReply::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListReply& ListReply::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsListReply();
  return *internal_default_instance();
}

ListReply* ListReply::New(::google::protobuf::Arena* arena) const {
  ListReply* n = new ListReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  followers_.Clear();
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.ListReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_users()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->users(this->users_size() - 1).data(),
            static_cast<int>(this->users(this->users_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.ListReply.users"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string followers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_followers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->followers(this->followers_size() - 1).data(),
            static_cast<int>(this->followers(this->followers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.ListReply.followers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.ListReply.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.ListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.ListReply)
  return false;
#undef DO_
}

void ListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string users = 1;
  for (int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->users(i).data(), static_cast<int>(this->users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.users");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->users(i), output);
  }

  // repeated string followers = 2;
  for (int i = 0, n = this->followers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followers(i).data(), static_cast<int>(this->followers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.followers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->followers(i), output);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.ListReply)
}

::google::protobuf::uint8* ListReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string users = 1;
  for (int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->users(i).data(), static_cast<int>(this->users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.users");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->users(i), target);
  }

  // repeated string followers = 2;
  for (int i = 0, n = this->followers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followers(i).data(), static_cast<int>(this->followers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.followers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->followers(i), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.ListReply.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.ListReply)
  return target;
}

size_t ListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.ListReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string users = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->users_size());
  for (int i = 0, n = this->users_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->users(i));
  }

  // repeated string followers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->followers_size());
  for (int i = 0, n = this->followers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->followers(i));
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.ListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.ListReply)
    MergeFrom(*source);
  }
}

void ListReply::MergeFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  followers_.MergeFrom(from.followers_);
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void ListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReply::CopyFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReply::IsInitialized() const {
  return true;
}

void ListReply::Swap(ListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListReply::InternalSwap(ListReply* other) {
  using std::swap;
  users_.InternalSwap(&other->users_);
  followers_.InternalSwap(&other->followers_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListReply::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimelineStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimelineStream::kUsernameFieldNumber;
const int TimelineStream::kPostFieldNumber;
const int TimelineStream::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimelineStream::TimelineStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tinysocialnetwork_2eproto::InitDefaultsTimelineStream();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocialnetwork.TimelineStream)
}
TimelineStream::TimelineStream(const TimelineStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  post_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.post().size() > 0) {
    post_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.post_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time().size() > 0) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  // @@protoc_insertion_point(copy_constructor:tinysocialnetwork.TimelineStream)
}

void TimelineStream::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TimelineStream::~TimelineStream() {
  // @@protoc_insertion_point(destructor:tinysocialnetwork.TimelineStream)
  SharedDtor();
}

void TimelineStream::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TimelineStream::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimelineStream::descriptor() {
  ::protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimelineStream& TimelineStream::default_instance() {
  ::protobuf_tinysocialnetwork_2eproto::InitDefaultsTimelineStream();
  return *internal_default_instance();
}

TimelineStream* TimelineStream::New(::google::protobuf::Arena* arena) const {
  TimelineStream* n = new TimelineStream;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimelineStream::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocialnetwork.TimelineStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TimelineStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocialnetwork.TimelineStream)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.TimelineStream.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string post = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_post()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->post().data(), static_cast<int>(this->post().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.TimelineStream.post"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocialnetwork.TimelineStream.time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocialnetwork.TimelineStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocialnetwork.TimelineStream)
  return false;
#undef DO_
}

void TimelineStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocialnetwork.TimelineStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string post = 2;
  if (this->post().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->post().data(), static_cast<int>(this->post().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.post");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->post(), output);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tinysocialnetwork.TimelineStream)
}

::google::protobuf::uint8* TimelineStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinysocialnetwork.TimelineStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string post = 2;
  if (this->post().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->post().data(), static_cast<int>(this->post().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.post");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->post(), target);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocialnetwork.TimelineStream.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinysocialnetwork.TimelineStream)
  return target;
}

size_t TimelineStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocialnetwork.TimelineStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string post = 2;
  if (this->post().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->post());
  }

  // string time = 3;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimelineStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocialnetwork.TimelineStream)
  GOOGLE_DCHECK_NE(&from, this);
  const TimelineStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimelineStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocialnetwork.TimelineStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocialnetwork.TimelineStream)
    MergeFrom(*source);
  }
}

void TimelineStream::MergeFrom(const TimelineStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocialnetwork.TimelineStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.post().size() > 0) {

    post_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.post_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void TimelineStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocialnetwork.TimelineStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimelineStream::CopyFrom(const TimelineStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocialnetwork.TimelineStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimelineStream::IsInitialized() const {
  return true;
}

void TimelineStream::Swap(TimelineStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimelineStream::InternalSwap(TimelineStream* other) {
  using std::swap;
  username_.Swap(&other->username_);
  post_.Swap(&other->post_);
  time_.Swap(&other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimelineStream::GetMetadata() const {
  protobuf_tinysocialnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tinysocialnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tinysocialnetwork

// @@protoc_insertion_point(global_scope)
